{"version":3,"sources":["components/Icon.js","components/Footer.js","App.js","index.js"],"names":["Icon","name","className","Footer","itemArray","Array","fill","App","useState","isCross","setIsCross","winMessage","setWinMessage","changeItem","itemNumber","toast","type","Container","position","Row","Col","md","map","item","index","Card","color","onClick","CardBody","Button","block","ReactDOM","render","document","getElementById"],"mappings":"oOAgBeA,EAZF,SAAC,GACV,OADqB,EAAVC,MAGP,IAAK,SACD,OAAO,kBAAC,IAAD,CAAaC,UAAU,SAClC,IAAK,QACD,OAAO,kBAAC,IAAD,CAASA,UAAU,SAC9B,QACI,OAAO,kBAAC,IAAD,CAAOA,UAAU,W,+DCArBC,G,YARA,WACX,OACI,yBAAKD,UAAU,gCAAf,+BCUFE,EAAY,IAAIC,MAAM,GAAGC,KAAK,SAgIrBC,EA9HH,WAAO,IAAD,EAEaC,oBAAS,GAFtB,mBAETC,EAFS,KAEDC,EAFC,OAGmBF,mBAAS,IAH5B,mBAGTG,EAHS,KAGEC,EAHF,KA+DVC,EAAa,SAAAC,GACjB,OAAGH,EACMI,YAAMJ,EAAW,CAACK,KAAM,YAGJ,UAA1BZ,EAAUU,GAMJC,YAAM,iBAAkB,CAACC,KAAM,WAJtCZ,EAAUU,GAAcL,EAAU,QAAQ,SAC1CC,GAAYD,QA1DZL,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IACX,SAAhBA,EAAU,GAEVQ,EAAc,GAAD,OAAIR,EAAU,GAAd,UAEbA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IACX,SAAhBA,EAAU,GAEVQ,EAAc,GAAD,OAAIR,EAAU,GAAd,UAEbA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IACX,SAAhBA,EAAU,GAEVQ,EAAc,GAAD,OAAIR,EAAU,GAAd,UAEbA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IACX,SAAhBA,EAAU,GAEVQ,EAAc,GAAD,OAAIR,EAAU,GAAd,UAEbA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IACX,SAAhBA,EAAU,GAEVQ,EAAc,GAAD,OAAIR,EAAU,GAAd,UAEbA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IACX,SAAhBA,EAAU,GAEVQ,EAAc,GAAD,OAAIR,EAAU,GAAd,UAEbA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IACX,SAAhBA,EAAU,GAEVQ,EAAc,GAAD,OAAIR,EAAU,GAAd,UAEbA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IACX,SAAhBA,EAAU,IAEVQ,EAAc,GAAD,OAAIR,EAAU,GAAd,aAsBjB,OACE,6BACE,kBAACa,EAAA,EAAD,CAAWf,UAAU,OACnB,kBAAC,IAAD,CAAgBgB,SAAS,kBAEzB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGnB,UAAU,eACnBS,EACC,yBAAKT,UAAU,aACb,wBAAIA,UAAU,2CACXS,IAIL,wBAAIT,UAAU,4BACXO,EAAU,QAAU,SADvB,UAIF,yBAAKP,UAAU,QACZE,EAAUkB,KAAI,SAACC,EAAMC,GAAP,OACb,kBAACC,EAAA,EAAD,CAAMC,MAAM,UAAUC,QAAS,kBAAMd,EAAWW,KAC9C,kBAACI,EAAA,EAAD,CAAU1B,UAAU,OAClB,kBAAC,EAAD,CAAMD,KAAMsB,SAIlB,8BACA,kBAACM,EAAA,EAAD,CACEH,MAAM,UACNI,OAAK,EACLH,QA1GK,WACjBjB,GAAW,GACXE,EAAc,IACdR,EAAUE,KAAK,UAwGHJ,UAAU,eAJZ,sBAWN,kBAAC,EAAD,SCpIR6B,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,W","file":"static/js/main.8da57832.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nimport { FaTimes,FaPen, FaRegCircle } from \"react-icons/fa\"\r\n\r\nconst Icon = ({name}) => {\r\n    switch(name)\r\n    {\r\n        case \"circle\":\r\n            return <FaRegCircle className=\"icon\"/>\r\n        case \"cross\":\r\n            return <FaTimes className=\"icon\"/>\r\n        default:\r\n            return <FaPen className=\"icon\"/>\r\n    }\r\n}\r\n\r\nexport default Icon;","import React from \"react\"\r\n\r\nimport \"../App.css\"\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div className=\"footer text-center text-grey\">\r\n            Designed By Sushil Shinde\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React,{useState} from \"react\"\nimport ReactDOM from \"react-dom\"\n\n\n\nimport Icon from \"./components/Icon\"\n\nimport { ToastContainer, toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\n\nimport {Card,CardBody,Container,Button,Col,Row} from \"reactstrap\"\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./App.css\";\nimport Footer from \"./components/Footer\"\n\nconst itemArray = new Array(9).fill(\"empty\")\n\nconst App = () => {\n\n  const [isCross,setIsCross] = useState(false)\n  const [winMessage,setWinMessage] = useState(\"\")\n\n  const reloadGame = () =>{\n    setIsCross(false)\n    setWinMessage(\"\")\n    itemArray.fill(\"empty\")\n  }\n\n  const checkIsWinner = () => {\n    if (\n      itemArray[0] === itemArray[1] &&\n      itemArray[0] === itemArray[2] &&\n      itemArray[0] != \"empty\"\n    ) {\n      setWinMessage(`${itemArray[0]} wins`);\n    } else if (\n      itemArray[3] === itemArray[4] &&\n      itemArray[3] === itemArray[5] &&\n      itemArray[3] != \"empty\"\n    ) {\n      setWinMessage(`${itemArray[3]} wins`);\n    } else if (\n      itemArray[6] === itemArray[7] &&\n      itemArray[6] === itemArray[8] &&\n      itemArray[6] != \"empty\"\n    ) {\n      setWinMessage(`${itemArray[6]} wins`);\n    } else if (\n      itemArray[0] === itemArray[3] &&\n      itemArray[0] === itemArray[6] &&\n      itemArray[0] != \"empty\"\n    ) {\n      setWinMessage(`${itemArray[0]} wins`);\n    } else if (\n      itemArray[1] === itemArray[4] &&\n      itemArray[1] === itemArray[7] &&\n      itemArray[1] != \"empty\"\n    ) {\n      setWinMessage(`${itemArray[1]} wins`);\n    } else if (\n      itemArray[2] === itemArray[5] &&\n      itemArray[2] === itemArray[8] &&\n      itemArray[2] != \"empty\"\n    ) {\n      setWinMessage(`${itemArray[2]} wins`);\n    } else if (\n      itemArray[0] === itemArray[4] &&\n      itemArray[0] === itemArray[8] &&\n      itemArray[0] != \"empty\"\n    ) {\n      setWinMessage(`${itemArray[0]} wins`);\n    } else if (\n      itemArray[2] === itemArray[4] &&\n      itemArray[2] === itemArray[6] &&\n      itemArray[2] != \"empty\"\n    ) {\n      setWinMessage(`${itemArray[2]} wins`);\n    }\n  }\n\n  const changeItem = itemNumber => {\n    if(winMessage){\n      return toast(winMessage,{type: \"success\"})\n    }\n\n    if(itemArray[itemNumber] === \"empty\"){\n\n      itemArray[itemNumber] = isCross ? \"cross\":\"circle\"\n      setIsCross(!isCross)\n\n    }else{\n      return toast(\"Already filled\", {type: \"error\"})\n    }\n\n    checkIsWinner();\n\n  }\n\n  return (\n    <div>\n      <Container className=\"p-5\">\n        <ToastContainer position=\"bottom-center\" />\n\n        <Row>\n          <Col md={6} className=\"offset-md-3\">\n            {winMessage ? (\n              <div className=\"mb-2 mt-2\">\n                <h1 className=\"text-success text-uppercase text-center\">\n                  {winMessage}\n                </h1>\n              </div>\n            ) : (\n              <h1 className=\"text-center text-warning\">\n                {isCross ? \"Cross\" : \"Circle\"} Turns\n              </h1>\n            )}\n            <div className=\"grid\">\n              {itemArray.map((item, index) => (\n                <Card color=\"warning\" onClick={() => changeItem(index)}>\n                  <CardBody className=\"box\">\n                    <Icon name={item} />\n                  </CardBody>\n                </Card>\n              ))}\n              <div></div>\n              <Button\n                color=\"success\"\n                block\n                onClick={reloadGame}\n                className=\"offset-mb-4\"\n              >\n                Reload The Game\n              </Button>\n            </div>\n          </Col>\n        </Row>\n        <Footer/>\n      </Container>\n      \n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from \"./App\"\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}